---
swagger: "2.0"
info:
  description: "This is a sample server api repository."
  version: "1.0.0"
  title: "Swagger ui"
host: "localhost:30015"
basePath: "/v1"
tags:
- name: "user"
  description: "Operations about user"
schemes:
- "http"
paths:
  /user:
    x-swagger-router-controller: user
    get:
      tags:
      - "user"
      summary: "Get users"
      description: "This can only be done by the logged in user."
      operationId: "getUsers"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Error"
        404:
          description: "Users not found"
  /user/add:
    x-swagger-router-controller: user
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "parms"
        in: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /user/{username}:
    x-swagger-router-controller: user
    put:
      tags:
      - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      username:
        type: "string"
      password:
        type: "string"
        format: "password"
      name:
        type: "string"
      gender:
        type: "string"
      email:
        type: "string"
      create_datetime:
        type: "string"
        format: "date-time"
      status:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
externalDocs:
    description: "View the Homepage"
    url: "http://localhost:30016/"
